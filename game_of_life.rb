class GameOfLife
  def initialize
    @grid = [
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-----------------------------###-----------------------------",
     "-----------------------------#-#-----------------------------",
     "-----------------------------#-#-----------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------",
     "-------------------------------------------------------------"
    ]
  end

  def update_grid
    @grid = @grid.each_with_index.map do |row, x|
      row.each_char.with_index.map do |cell, y|
        n = count_adjacent_alive(x, y)

        if cell == "#" && n < 2
          "-"
        elsif cell == "#" && (n == 2 || n == 3)
          "#"
        elsif cell == "#" && n > 3
          "-"
        elsif cell == "-" && n == 3
          "#"
        else
          cell
        end
      end.join
    end
  end

  def print_grid
    @grid.each do |row|
      row.chars.each do |cell|
        case cell
        when "#"
          print "â–  "  # \u25A0
        when "-"
          print ". "
        else
          print "? "
        end
      end
      puts
    end
  end

  def run_generations(n = 50)
    n.times do
      puts "\e[H\e[2J"

      print_grid
      update_grid
      sleep 2
    end
  end

  private
  
  def count_adjacent_alive(x, y)
    max_x = @grid.size
    max_y = @grid[0].size

    adjacent = [
      [x - 1, y - 1],
      [x - 1, y],
      [x - 1, y + 1],
      [x,     y - 1],
      [x,     y + 1],
      [x + 1, y - 1],
      [x + 1, y],
      [x + 1, y + 1]
    ]

    adjacent.map do |i, j|
      wrapped_i = (i + max_x) % max_x
      wrapped_j = (j + max_y) % max_y

      @grid[wrapped_i][wrapped_j] == "#" ? 1 : 0
    end.sum
  end
end

life = GameOfLife.new

life.print_grid
life.run_generations(200)
